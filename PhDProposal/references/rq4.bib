@inproceedings{Kim2022,
  series = {ISSTA ’22},
  title = {Automated test generation for REST APIs: no time to rest yet},
  url = {http://dx.doi.org/10.1145/3533767.3534401},
  DOI = {10.1145/3533767.3534401},
  booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
  publisher = {ACM},
  author = {Kim,  Myeongsoo and Xin,  Qi and Sinha,  Saurabh and Orso,  Alessandro},
  year = {2022},
  month = jul,
  collection = {ISSTA ’22},
  keywords = {RQ4},
}

@INPROCEEDINGS{9159077,
  author={Viglianisi, Emanuele and Dallago, Michael and Ceccato, Mariano},
  booktitle={2020 IEEE 13th International Conference on Software Testing, Validation and Verification (ICST)}, 
  title={RESTTESTGEN: Automated Black-Box Testing of RESTful APIs}, 
  year={2020},
  volume={},
  number={},
  pages={142-152},
  keywords={Testing;Standards;Uniform resource locators;Representational state transfer;Computer architecture;Europe;Banking;Black-box testing;REST APIs;Automatic test case generation;Oracle},
  doi={10.1109/ICST46399.2020.00024},
  keywords = {RQ4},
}

@article{Corradini2022,
  title = {Automated black‐box testing of nominal and error scenarios in RESTful APIs},
  volume = {32},
  ISSN = {1099-1689},
  url = {http://dx.doi.org/10.1002/stvr.1808},
  DOI = {10.1002/stvr.1808},
  number = {5},
  journal = {Software Testing,  Verification and Reliability},
  publisher = {Wiley},
  author = {Corradini,  Davide and Zampieri,  Amedeo and Pasqua,  Michele and Viglianisi,  Emanuele and Dallago,  Michael and Ceccato,  Mariano},
  year = {2022},
  month = jan,
  keywords = {RQ4},
}

@article{Marculescu2022,
  title = {On the Faults Found in REST APIs by Automated Test Generation},
  volume = {31},
  ISSN = {1557-7392},
  url = {http://dx.doi.org/10.1145/3491038},
  DOI = {10.1145/3491038},
  number = {3},
  journal = {ACM Transactions on Software Engineering and Methodology},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Marculescu,  Bogdan and Zhang,  Man and Arcuri,  Andrea},
  year = {2022},
  month = mar,
  pages = {1–43},
  keywords = {RQ4},
}

@ARTICLE{9344640,
  author={Laranjeiro, Nuno and Agnelo, João and Bernardino, Jorge},
  journal={IEEE Access}, 
  title={A Black Box Tool for Robustness Testing of REST Services}, 
  year={2021},
  volume={9},
  number={},
  pages={24738-24754},
  keywords={Robustness;Tools;Testing;Simple object access protocol;Security;Europe;Servers;REST;RESTful;web API;web services;robustness testing},
  doi={10.1109/ACCESS.2021.3056505}}
@ARTICLE{9344640,
  author={Laranjeiro, Nuno and Agnelo, João and Bernardino, Jorge},
  journal={IEEE Access}, 
  title={A Black Box Tool for Robustness Testing of REST Services}, 
  year={2021},
  volume={9},
  number={},
  pages={24738-24754},
  keywords={Robustness;Tools;Testing;Simple object access protocol;Security;Europe;Servers;REST;RESTful;web API;web services;robustness testing},
  doi={10.1109/ACCESS.2021.3056505},
  keywords = {RQ4},
  }

@INPROCEEDINGS{9724904,
  author={Tsai, Chung-Hsuan and Tsai, Shi-Chun and Huang, Shih-Kun},
  booktitle={2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)}, 
  title={REST API Fuzzing by Coverage Level Guided Blackbox Testing}, 
  year={2021},
  volume={},
  number={},
  pages={291-300},
  keywords={Codes;Computer bugs;Software quality;Fuzzing;Complexity theory;Software reliability;Security;OpenAPI;REST API;Test coverage level;Black-box testing;Fuzz testing;Software quality},
  doi={10.1109/QRS54544.2021.00040},
  keywords = {RQ4},
  }

@inbook{MartinLopez2020,
  title = {RESTest: Black-Box Constraint-Based Testing of RESTful Web APIs},
  ISBN = {9783030653101},
  ISSN = {1611-3349},
  url = {http://dx.doi.org/10.1007/978-3-030-65310-1_33},
  DOI = {10.1007/978-3-030-65310-1_33},
  booktitle = {Lecture Notes in Computer Science},
  publisher = {Springer International Publishing},
  author = {Martin-Lopez,  Alberto and Segura,  Sergio and Ruiz-Cortés,  Antonio},
  year = {2020},
  pages = {459–475},
  RQ4 = {RQ4},
}

@masterthesis{Tokos2023,
   abstract = {Web applications and services are widely used today. Security is an important factor since web applications are accessed via the internet. Web services often expose their functionality through web application programming interfaces (API), and a common type of API is REST API (or RESTful API), which is an API that follows the representational state transfer architecture. Vulnerabilities in these interfaces can lead to security breaches. Therefore, they must be secure and reliable. Thoroughly testing APIs is a very time-consuming task, but there are ways to automate it, and one option is fuzz testing. In this thesis, the fuzzing tools Fuzz-lightyear, Schemathesis, and RESTler are evaluated to determine if they are effective at finding faults in REST APIs. All three tools can generate and run test cases based on OpenAPI specifications. The evaluation is based on the performance of the tools in a series of experiments. The experiments involve executing the fuzzing tools against three different APIs and comparing the results. The metrics that are used for the evaluation include the number of server errors (Test cases that return a server error) found, the number of semantic errors (Test cases that fail because of a mismatch between the OpenAPI specification and the test case response), execution time, and the number of requests sent. The experiment results show that Schemanthesis excels at finding semantic errors, while RESTler is better at finding server errors. Fuzz-lightyear found no server errors and fewer semantic errors than Schemathesis but had a short execution time. In conclusion, RESTler and Schemathesis are effective at finding faults when fuzz testing in APIs, while Fuzz-lightyear is not.},
   author = {Alexander Tokos},    
   title = {Evaluating fuzzing tools for automated testing of REST APIs using OpenAPI specification},
   year = {2023},
  keywords = {RQ4},
}






